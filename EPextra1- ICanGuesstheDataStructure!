#include <stdio.h>
#include <stdlib.h>

int main()
{
    int testCases = 0;
    int i;
    scanf("%d", &testCases);

    for (i = 0; i < testCases; i++)
    {
        int n;
        int numList1 = 0;
        int numList2 = 0;
        scanf("%d", &n);
        int List1[n], List2[n];
        List1[0] = 0;
        List2[0] = 0;
        int Loop,Verificador,testImpossible;
        int q = 0,s = 0,pq = 0;
        int j;
        int stack;
        stack = 0;
        int priorityQueue = 0;
        for (j = 0; j < n; j++)
        {
            int k, l;
            scanf("%d %d", &k, &l);
            if (k == 1)
            {
                List1[numList1] = l;
                numList1++;
            }
            if (k == 2)
            {
                List2[numList2] = l;
                numList2++;


                if (List1[numList1 - 1] == List2[0] || List1[0] == List2[numList2 - 1])
                {
                    stack++;
                }
                int r;
                int Loop;
                int a[numList1];
                for (int h = 0; h < numList1; h++)
                {
                    a[h] = List1[h];
                }
                for (r = 0; r < numList1; r++)
                {
                    for (Loop = 0; Loop < numList1 - 1; Loop++)
                    {
                    int temp;
                    if (a[Loop] > a[Loop + 1])
                    {
                        temp = a[Loop];
                        a[Loop] = a[Loop + 1];
                        a[Loop + 1] = temp;
                    }
                }
                }
                if (List2[0] == a[numList1 - 1])
                {
                    priorityQueue++;
                }
            }
        }

        int f = 0;
        int r = 0;
        int queue = 0;
        if (List1[0] == List2[0])
        {
            if (List1[f] == List2[f])
            {
                r++;
            }
            if (f == r)
            {
                queue++;
            } 
        }


                int w = 0;
                int t = 0;
                int a[numList1];
                for (int h = 0; h < numList1; h++)
                {
                    a[h] = List1[h];
                }
                for (w = 0; w < numList1; w++)
                {
                    for (t = 0; t < numList1 - 1; t++)
                    {
                    int temp;
                    if (a[t] > a[t + 1])
                    {
                        temp = a[t];
                        a[t] = a[t + 1];
                        a[t + 1] = temp;
                    }
                }
                }
                int p;
                for (int o = 0; o < numList2; o++)
                {
                    for (int y = 0; y < numList1; y++)
                    {
                        if (List2[o] == List1[y])
                        {
                            p++;
                        }
                    }
                }
        if (p != sizeof(List2)/sizeof(List2[0]))
        {
            printf("impossible\n");
        }
        else
        {
                  if (stack != 0 && queue!= 0){
            stack == 0;
        }
        else
        {
            if (priorityQueue > stack)
            {
                stack = 0;
            }
            else
            {
                priorityQueue = 0;
            }
            if (priorityQueue != 0 && stack != 0 || priorityQueue != 0 && queue != 0)
            {
                printf("not sure\n");
            }
            else
            {
                if(queue != 0)
            {
                printf("queue\n");
            }
            if (stack != 0)
            {
                printf("stack\n");
            }
            if (priorityQueue != 0)
            {
                printf("priority queue\n");
            }
            }
        }
        if (queue == 0 && priorityQueue == 0 && stack == 0)
        {
            printf("impossible\n");
        }  
        }
        

    }
    return 0;
}
