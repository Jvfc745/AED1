#include <stdio.h>
#include <stdlib.h>
#define MAX 100

typedef struct graph {
	int larg;
	int alt;
	char **point;
}Graph;


Graph* init(int largura, int altura) {  
	int i;
	Graph *mapa ;
	mapa = (Graph*) malloc(sizeof(Graph));
	mapa->larg = largura;
	mapa->alt = altura;
	
	mapa->point = (char**) malloc(sizeof(char*) * altura);
	for (i = 0; i < altura; i++) {
		mapa->point[i] = (char *) malloc(sizeof(char) * (largura + 1));
	}
	
	return mapa;
}

void freeGraph (Graph *mapa) {
	int i;
	Graph *temp = mapa;
	
	if (mapa == NULL)
		return;
	
	for (i = 0; i < temp->alt; i++) {
		free(temp->point[i]);
	}
	free(temp->point);
	free(temp);
}


int main () {
	char temp;
	int x, y, i, j;            
	int a = 0, b = 0;
	int Matrix[MAX][MAX];
	Graph *Cell;

	scanf("%d", &x);
	scanf("%d", &y);
		
	Cell = init(x, y);
	
	for (i = 0; i < y; i++) {
		scanf("%s", Cell->point[i]);
	}
	for (i = 0; i < y; i++) {
		for (j = 0; j < x; j++)
			Matrix[i][j] = 0;
	}
	
	while (1) {
		// Verifica se esta fora do mapa
		if (Matrix[b][a]) 
			break;
		
		if (a >= x || b >= y || a < 0 || b < 0) 
			break;
			
	
		Matrix[b][a] = 1;
	
		temp = Cell->point[b][a];

		if (temp == '>') {
			a++;
		}
		else if (temp == '<') {
			a--;
		}
		else if (temp == 'v') {
			b++;
		}
		else if (temp == '^') {
			b--;
		}
		else if (temp == '*') {
			printf("*\n");
			return 0;
		}
		else if (temp == '.') {
			if (a < Cell->larg - 1) {
				a++;
			}
			else if (b < Cell->alt - 1) {
				a = 0;
				b++;
			}
		}	
	}
	
	printf("!\n");
	    
	freeGraph(Cell);
	
	return 0;
}
